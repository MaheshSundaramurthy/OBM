#!/bin/sh

set -e

usage() {
    cat << EOF
USAGE: ./generate_initial_sql.sh POSTGRES_SCHEMA_FILE INITIAL_DATA_FILE

Generates an H2-compatible schema out of a postgres schema, concatenating the
initial data at the end. Outputs the result to STDOUT.

POSTGRES_SCHEMA_FILE: the result of pg_dump --schema-only
INITIAL_DATA_FILE: an SQL file with some initial data
EOF
}

main() {
    if [ $# != 1 ] && [ $# != 2 ]; then
        usage
        exit 1
    fi
    if [ "$1" = '-h' ] || [ "$1" = '--help' ]; then
        usage
        exit 0
    fi
    local POSTGRES_SCHEMA_FILE=$1
    local INITIAL_DATA_FILE=$2

    echo "-- This script was automatically generated by generate_initial_sql.sh"
    grep -v '^SET ' $POSTGRES_SCHEMA_FILE | \
        grep -v '^CREATE PROCEDURAL ' | \
        grep -v '^ALTER .* OWNER TO ' | \
        sed 's/ without time zone//g' | \
        sed 's/NO MAXVALUE//g' | \
        sed 's/NO MINVALUE//g' | \
        sed 's/ALTER SEQUENCE.*;//g' | \
        sed 's/TABLE ONLY/TABLE/g' | \
        sed 's/ USING btree //g' | \
        sed 's/(LIKE /AS (SELECT * FROM /g' | \
        sed 's/^REVOKE ALL .*//g' | \
        sed 's/^GRANT ALL .*//g' | \
        sed 's/^INSERT INTO ObmInfo SELECT .*//g' | \
        sed "s/::[a-z ]\+,$/,/g" | \
        sed "s/::[a-z ]\+$//g" | \
        sed 's/::regclass//' | \
        sed 's/::bpchar//' | \
        perl -e 'undef $/;$_=<>;s/CREATE TYPE (\w+) AS ENUM \((.+?)\)/CREATE DOMAIN $1 AS VARCHAR (16) CHECK VALUE IN ($2)/gs;print "$_\n"' | \
        perl -e 'undef $/;$_=<>;s/CREATE FUNCTION .+? LANGUAGE \w+;//gs; print "$_\n";' | \
        perl -e 'undef $/;$_=<>;s/CREATE TRIGGER .+?;//gs; print "$_\n";'
    cat $INITIAL_DATA_FILE
}

main $*
